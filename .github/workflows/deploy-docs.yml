name: Deploy Website and Docs to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-website:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd website
          npm install

      - name: Build website
        run: |
          cd website
          npm run build

      - name: Upload website artifact
        uses: actions/upload-artifact@v4
        with:
          name: website-build
          path: website/dist

  deploy:
    needs: build-website
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download website artifact
        uses: actions/download-artifact@v4
        with:
          name: website-build
          path: ./website-build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare deployment directory
        run: |
          # Start fresh
          rm -rf deployment || true
          mkdir -p deployment

          # Debug - list contents of directories
          echo "Contents of website-build:"
          ls -la website-build/

          echo "Contents of docs:"
          ls -la docs/

          # Copy website files to the root directory
          cp -r website-build/* deployment/

          # Create a simple index.html in the root if it doesn't exist
          if [ ! -f deployment/index.html ]; then
            echo "Creating a simple index.html in the root"
            echo '<meta http-equiv="refresh" content="0; url=/NebulaDB/website/" />' > deployment/index.html
          fi

          # Copy docs to a subdirectory
          mkdir -p deployment/docs
          cp -r docs/* deployment/docs/ || echo "No docs to copy"

          # Create website directory and copy files there as a backup
          mkdir -p deployment/website
          cp -r website-build/* deployment/website/ || echo "No website files to copy"

          # Debug - list final structure
          echo "Final deployment structure:"
          find deployment -type f | sort

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deployment'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
