name: Deploy Website and Docs to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-website:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd website
          npm install

      - name: Build website
        run: |
          cd website
          npm run build

      - name: Upload website artifact
        uses: actions/upload-artifact@v4
        with:
          name: website-build
          path: website/dist

  deploy:
    needs: build-website
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download website artifact
        uses: actions/download-artifact@v4
        with:
          name: website-build
          path: ./website-build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare deployment directory
        run: |
          # Start fresh
          rm -rf deployment || true
          mkdir -p deployment

          # Debug - list contents of directories
          echo "Contents of website-build:"
          ls -la website-build/

          echo "Contents of docs:"
          ls -la docs/

          # Create a custom index.html in the root that loads the website
          cat > deployment/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>NebulaDB - Fast. Flexible. Serverless.</title>
            <meta http-equiv="refresh" content="0; url=website/">
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
                background-color: #0f172a;
                color: white;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                height: 100vh;
                margin: 0;
                padding: 20px;
                text-align: center;
              }
              h1 {
                font-size: 2rem;
                margin-bottom: 1rem;
              }
              p {
                font-size: 1.2rem;
                margin-bottom: 2rem;
                color: #94a3b8;
              }
              a {
                display: inline-block;
                background: linear-gradient(to right, #3b82f6, #8b5cf6);
                color: white;
                text-decoration: none;
                padding: 12px 24px;
                border-radius: 9999px;
                font-weight: 500;
                transition: opacity 0.2s;
              }
              a:hover {
                opacity: 0.9;
              }
            </style>
          </head>
          <body>
            <h1>NebulaDB v0.2.2 "Altocumulus"</h1>
            <p>Redirecting to the new website...</p>
            <a href="website/">Go to Website</a>
          </body>
          </html>
          EOL

          # Copy website files to the website directory
          mkdir -p deployment/website
          cp -r website-build/* deployment/website/ || echo "No website files to copy"

          # Copy docs to a subdirectory
          mkdir -p deployment/docs
          cp -r docs/* deployment/docs/ || echo "No docs to copy"

          # Create a .nojekyll file to prevent GitHub from processing the site with Jekyll
          touch deployment/.nojekyll

          # Debug - list final structure
          echo "Final deployment structure:"
          find deployment -type f | sort

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deployment'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
